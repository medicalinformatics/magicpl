<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/Pfade"
	xmlns:tns="http://www.example.org/Pfade" elementFormDefault="qualified">

	<element name="pathconfig">
		<complexType>
			<sequence>
				<element ref="tns:paths" />
				<element ref="tns:iodefinitions" />
			</sequence>
		</complexType>
	</element>

	<element name="iodefinitions">
		<annotation>
			<documentation>
				Optional. Allows to defines iosingles and iorecords
				for use in the following schema.
			</documentation>
		</annotation>
		<complexType>
			<sequence maxOccurs="unbounded">
				<choice>
					<group ref="tns:ioDefChoice" />
				</choice>
			</sequence>
		</complexType>
	</element>

	<complexType name="iorecord">
		<annotation>
			<documentation>
				A convenient record of several iosingles. Implementations
				will expand an iorecord to its contained iosingles.
			</documentation>
		</annotation>
		<sequence>
			<element name="iosingle" type="tns:iosingle" maxOccurs="unbounded"/> <!-- TODO: Soll ein bestehendes iosingle referenzieren! -->
		</sequence>
		<attribute name="name" type="string" use="required" />
		<attribute name="adapter" type="string" default="ImmutableMapAdapter"/>
	</complexType>

	<complexType name="iosingle">
		<annotation>
			<documentation>
				A single input/output data type with a key and a value
				(usually both a string).
			</documentation>
		</annotation>
		<attribute name="name" type="string" use="required"/>
		<attribute name="type" type="string" default="string"/>
		<attribute name="adapter" type="string" default="StringAdapter"/>
	</complexType>

	<element name="paths">
		<annotation>
			<documentation>
				Lists all available paths. Each can either be a simple
				path ("path") or a chain of simple paths ("multipath").
			</documentation>
		</annotation>
		<complexType>
			<sequence>
				<choice maxOccurs="unbounded">
					<group ref="tns:pathChoice"></group>
				</choice>
			</sequence>
		</complexType>
	</element>

	<complexType name="iorecordref">
		<attribute name="ref" type="string"/>
	</complexType>

	<complexType name="iosingleref">
		<attribute name="ref" type="string"/>
	</complexType>

	<complexType name="path">
		<annotation>
			<documentation>Base type for paths</documentation>
		</annotation>
		<sequence>
			<element name="name" type="string"></element>
			<element name="parameters" minOccurs="0">
				<complexType>
					<sequence>
						<element name="parameter" minOccurs="0" maxOccurs="unbounded">
							<complexType>
								<simpleContent>
									<extension base="string">
										<attribute name="name" type="token"></attribute>
									</extension>
								</simpleContent>
							</complexType>
						</element>
					</sequence>
				</complexType>
			</element>
			<element name="input">
				<complexType>
					<sequence maxOccurs="unbounded" >
						<choice>
							<group ref="tns:ioRefChoice" />
						</choice>
					</sequence>
				</complexType>
			</element>
			<element name="output">
				<complexType>
					<sequence maxOccurs="unbounded" >
						<choice>
							<group ref="tns:ioRefChoice" />
						</choice>
					</sequence>
				</complexType>
			</element>
		</sequence>
	</complexType>

	<complexType name="simplePath">
		<annotation>
			<documentation>
				Type definition for simple paths, i.e. those that are
				directly implemented by a Java class.
			</documentation>
		</annotation>
		<complexContent>
			<extension base="tns:path">
				<sequence>
					<choice>
						<element name="implementation" type="string"></element>
						<element name="switch" type="tns:switch"></element>
					</choice>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="multiPath">
		<annotation>
			<documentation>Multipaths, i.e. chains of simple path invocations called "steps"</documentation>
		</annotation>
		<complexContent>
			<extension base="tns:path">
				<sequence>
					<element name="step" type="tns:simplePath" maxOccurs="unbounded"></element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>

	<complexType name="switch">
		<sequence>
			<element name="case" maxOccurs="unbounded" type="tns:guardedCaseType">
			</element>
			<element name="default" minOccurs="0" maxOccurs="1"
				type="tns:defaultCaseType" />
		</sequence>
		<attribute name="evaluator" type="string" use="required"></attribute>
	</complexType>

	<complexType name="defaultCaseType">
		<choice>
			<group ref="tns:pathChoice"></group>
		</choice>
	</complexType>

	<complexType name="guardedCaseType">
		<complexContent>
			<extension base="tns:defaultCaseType">
				<attribute name="value" type="string" use="required" />
			</extension>
		</complexContent>
	</complexType>

	<group name="pathChoice">
		<choice>
			<element name="path" type="tns:simplePath" />
			<element name="multipath" type="tns:multiPath" />
		</choice>
	</group>

	<group name="ioDefChoice">
		<choice>
			<element name="iosingle" type="tns:iosingle"/>
			<element name="iorecord" type="tns:iorecord"/>
		</choice>
	</group>

	<group name="ioRefChoice">
		<choice>
			<element name="iosingle" type="tns:iosingleref"/> <!-- TODO: Hier soll tatsächlich referenziert werden! -->
			<element name="iorecord" type="tns:iorecordref"/> <!-- TODO: Hier soll tatsächlich referenziert werden! -->
		</choice>
	</group>
</schema>